# .scrutinizer.yml
before_commands:
  - composer install

tools:
    # Runs the JSHint static analysis tool.
    js_hint: true

    # Collects code coverage information about the changeset.
    php_code_coverage:
        enabled:              true
        config_path:          ~
        test_command:         phpunit

        # Whether code coverage information should only be generated for changesets.
        only_changesets:      false

        filter:
            paths:                []
            excluded_paths:       ["vendor"]

    # Runs PHP Code Sniffer
    php_code_sniffer:
        enabled:              true
        command:              phpcs

        filter:
            paths:                []
            excluded_paths:       ["vendor"]

        config:
            # Built-in standards: PEAR, PHPCS, PSR1, PSR2, Squiz, Zend
            standard:             PSR1
            sniffs:               []
            severity:             ~
            error_severity:       ~
            warning_severity:     ~
            tab_width:            ~
            encoding:             ~

    # Runs PHP Copy/Paste Detector
    php_cpd:
        enabled:              true
        command:              phpcpd

        # Minimum number of identical lines (default: 5)
        min_lines:            5

        # Minimum number of identical tokens (default: 70)
        min_tokens:           70

        # A list of excluded directories.
        excluded_dirs:        ["vendor"]

    # Runs the PHP CS Fixer (http://cs.sensiolabs.org/).
    php_cs_fixer:
        enabled:              true
        command:              php-cs-fixer

        filter:
            paths:                []
            excluded_paths:       ["vendor"]

        config:
            level:                psr0 # Allowed Values: "psr0", "psr1", "psr2", "all"
            fixers:               []

    # Analyzes the size and structure of a PHP project.
    php_loc:
        enabled:              true
        command:              phploc
        excluded_dirs:        ["vendor"]

    # Runs the PHP Mess Detector (http://phpmd.org).
    php_mess_detector:
        enabled:              true
        command:              phpmd

        filter:
            paths:                []
            excluded_paths:       ["vendor"]

        config:
            rulesets:
                # Default:
                - codesize

    # PHP Analyzer Tool
    php_analyzer: true

    # PHP_Depend software analyzer and metric tool.
    php_pdepend:
        excluded_dirs: ["vendor"]

    # SensioLabs Security Checker (https://github.com/sensiolabs/security-checker)
    sensiolabs_security_checker: true

    # # Complete Scrutinizer's PHP Analyzer Tool
    # php_analyzer:
    #     extensions:

    #         # Default:
    #         - php
    #     enabled:              false
    #     filter:
    #         paths:                []
    #         excluded_paths:       []
    #     config:
    #         parameter_reference_check:
    #             enabled:              true
    #         checkstyle:
    #             enabled:              false
    #             no_trailing_whitespace:  true
    #             naming:
    #                 enabled:              true
    #                 local_variable:       ^[a-z][a-zA-Z0-9]*$
    #                 abstract_class_name:  ^Abstract|Factory$
    #                 utility_class_name:   Utils?$
    #                 constant_name:        ^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$
    #                 property_name:        ^[a-z][a-zA-Z0-9]*$
    #                 method_name:          ^(?:[a-z]|__)[a-zA-Z0-9]*$
    #                 parameter_name:       ^[a-z][a-zA-Z0-9]*$
    #                 interface_name:       ^[A-Z][a-zA-Z0-9]*Interface$
    #                 type_name:            ^[A-Z][a-zA-Z0-9]*$
    #                 exception_name:       ^[A-Z][a-zA-Z0-9]*Exception$
    #                 isser_method_name:    ^(?:is|has|should|may|supports)
    #         unreachable_code:
    #             enabled:              true
    #         check_access_control:
    #             enabled:              true
    #         typo_checks:
    #             enabled:              true
    #         check_variables:
    #             enabled:              true
    #         suspicious_code:
    #             enabled:              true
    #             overriding_parameter:  false
    #             overriding_closure_use:  true
    #             parameter_closure_use_conflict:  true
    #             parameter_multiple_times:  true
    #             non_existent_class_in_instanceof_check:  true
    #             non_existent_class_in_catch_clause:  true
    #             assignment_of_null_return:  true
    #             non_commented_switch_fallthrough:  true
    #             non_commented_empty_catch_block:  true
    #             overriding_private_members:  true
    #             use_statement_alias_conflict:  true
    #             precedence_in_condition_assignment:  true
    #         dead_assignments:
    #             enabled:              true
    #         verify_php_doc_comments:
    #             enabled:              false
    #             parameters:           true
    #             return:               true
    #             suggest_more_specific_types:  false
    #             ask_for_return_if_not_inferrable:  false
    #             ask_for_param_type_annotation:  false
    #         loops_must_use_braces:
    #             enabled:              false
    #         check_usage_context:
    #             enabled:              true
    #             method_call_on_non_object:
    #                 enabled:              true

    #                 # Does not display a warning when a type such as "object|null" is encountered.
    #                 ignore_null_pointer:  true
    #             foreach:
    #                 value_as_reference:   true
    #                 traversable:          true
    #             missing_argument:     true
    #             argument_type_checks:  lenient # Allowed Values: "disabled", "lenient", "strict"
    #         simplify_boolean_return:
    #             enabled:              false
    #         phpunit_checks:
    #             enabled:              false
    #         reflection_checks:
    #             enabled:              true

    #         # Checks Common Precedence Mistakes
    #         precedence_checks:
    #             enabled:              true
    #             assignment_in_condition:  true
    #             comparison_of_bit_result:  true
    #         basic_semantic_checks:
    #             enabled:              true
    #         doc_comment_fixes:
    #             enabled:              false
    #         reflection_fixes:
    #             enabled:              false
    #         use_statement_fixes:
    #             enabled:              true
    #             remove_unused:        true

    #             # Whether you would like multiple imports in one USE statement to be preserved, e.g. ``use A, B;``.
    #             preserve_multiple:    false
    #             order_alphabetically:  false
    #     path_configs:

    #         # Prototype
    #         -
    #             paths:                []
    #             enabled:              true
    #             config:
    #                 parameter_reference_check:
    #                     enabled:              true
    #                 checkstyle:
    #                     enabled:              false
    #                     no_trailing_whitespace:  true
    #                     naming:
    #                         enabled:              true
    #                         local_variable:       ^[a-z][a-zA-Z0-9]*$
    #                         abstract_class_name:  ^Abstract|Factory$
    #                         utility_class_name:   Utils?$
    #                         constant_name:        ^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$
    #                         property_name:        ^[a-z][a-zA-Z0-9]*$
    #                         method_name:          ^(?:[a-z]|__)[a-zA-Z0-9]*$
    #                         parameter_name:       ^[a-z][a-zA-Z0-9]*$
    #                         interface_name:       ^[A-Z][a-zA-Z0-9]*Interface$
    #                         type_name:            ^[A-Z][a-zA-Z0-9]*$
    #                         exception_name:       ^[A-Z][a-zA-Z0-9]*Exception$
    #                         isser_method_name:    ^(?:is|has|should|may|supports)
    #                 unreachable_code:
    #                     enabled:              true
    #                 check_access_control:
    #                     enabled:              true
    #                 typo_checks:
    #                     enabled:              true
    #                 check_variables:
    #                     enabled:              true
    #                 suspicious_code:
    #                     enabled:              true
    #                     overriding_parameter:  false
    #                     overriding_closure_use:  true
    #                     parameter_closure_use_conflict:  true
    #                     parameter_multiple_times:  true
    #                     non_existent_class_in_instanceof_check:  true
    #                     non_existent_class_in_catch_clause:  true
    #                     assignment_of_null_return:  true
    #                     non_commented_switch_fallthrough:  true
    #                     non_commented_empty_catch_block:  true
    #                     overriding_private_members:  true
    #                     use_statement_alias_conflict:  true
    #                     precedence_in_condition_assignment:  true
    #                 dead_assignments:
    #                     enabled:              true
    #                 verify_php_doc_comments:
    #                     enabled:              false
    #                     parameters:           true
    #                     return:               true
    #                     suggest_more_specific_types:  false
    #                     ask_for_return_if_not_inferrable:  false
    #                     ask_for_param_type_annotation:  false
    #                 loops_must_use_braces:
    #                     enabled:              false
    #                 check_usage_context:
    #                     enabled:              true
    #                     method_call_on_non_object:
    #                         enabled:              true

    #                         # Does not display a warning when a type such as "object|null" is encountered.
    #                         ignore_null_pointer:  true
    #                     foreach:
    #                         value_as_reference:   true
    #                         traversable:          true
    #                     missing_argument:     true
    #                     argument_type_checks:  lenient # Allowed Values: "disabled", "lenient", "strict"
    #                 simplify_boolean_return:
    #                     enabled:              false
    #                 phpunit_checks:
    #                     enabled:              false
    #                 reflection_checks:
    #                     enabled:              true

    #                 # Checks Common Precedence Mistakes
    #                 precedence_checks:
    #                     enabled:              true
    #                     assignment_in_condition:  true
    #                     comparison_of_bit_result:  true
    #                 basic_semantic_checks:
    #                     enabled:              true
    #                 doc_comment_fixes:
    #                     enabled:              false
    #                 reflection_fixes:
    #                     enabled:              false
    #                 use_statement_fixes:
    #                     enabled:              true
    #                     remove_unused:        true

    #                     # Whether you would like multiple imports in one USE statement to be preserved, e.g. ``use A, B;``.
    #                     preserve_multiple:    false
    #                     order_alphabetically:  false
